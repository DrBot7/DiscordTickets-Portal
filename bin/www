#!/usr/bin/env node

require('dotenv').config({path: 'user/.env'});
const Logger = require('leekslazylogger');
const log = new Logger({
	logToFile: false
});
log.multi(log);

const app = require('../src/app');
const http = require('http');

const normalizePort = val => {
	const port = parseInt(val, 10);

	if (isNaN(port))
		return val;

	if (port >= 0)
		return port;

	return false;
};

let port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

const server = http.createServer(app);

server.listen(port);

server.on('listening', () => {
	const addr = server.address();
	const bind = typeof addr === 'string' ?
		'pipe ' + addr :
		'port ' + addr.port;
	log.info(`Listening on ${bind}`);
});

server.on('error', error => {
	if (error.syscall !== 'listen') {
		throw error;
	}

	let bind = typeof port === 'string' ?
		'Pipe ' + port :
		'Port ' + port;

	switch (error.code) {
	case 'EACCES':
		log.error(bind + ' requires elevated privileges');
		process.exit(1);
		break;
	case 'EADDRINUSE':
		log.error(bind + ' is already in use');
		process.exit(1);
		break;
	default:
		throw error;
	}
});